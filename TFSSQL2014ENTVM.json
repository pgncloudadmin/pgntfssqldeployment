{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "networkInterfaceName": {
            "type": "string"
        },

        "networkSecurityGroupName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
         "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineSize": {
            "type": "string"
        },
        "virtualMachineRG": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "DomUserName": {
            "type": "string",
            "metadata": {
              "description": "Username for the Virtual Machine."
            }
          },
        "DomPassword": {
           "type": "securestring",
           "metadata": {
             "description": "Password for the Virtual Machine."
           }
         },
        "OUPath": {
           "type": "string",
           "defaultValue": "",
           "metadata": {
             "description": "OU to place VMs when joining to domain."
           }
         }, 
        "domainName": {
           "type": "string",
           "metadata": {
             "description": "Join to local domain."
           }
         },
	"SQLDATADriveCapacity":{
             "type":"int"
         },
         "SQLLOGSDriveCapacity":{
             "type":"int"
         },
         "SQLTEMPDriveCapacity":{
             "type":"int"
         }   
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetId": "[resourceId('ParagonDevOpsARMVNetRG','Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "DomUserNameSlashes": "[concat('\\',parameters('DomUserName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
	},
    "resources": [
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks":[ 
                        {
                           "name": "[concat(parameters('virtualMachineName'),'-datadisk1')]",
                           "diskSizeGB": "[parameters('SQLDATADriveCapacity')]",  
                            "lun": 0,
                            "createOption":"Empty",
                           "managedDisk" :{
                                "storageAccountType": "StandardSSD_LRS"
                            }

                        },
                        {
                            "name": "[concat(parameters('virtualMachineName'),'-logdisk1')]",
                            "diskSizeGB": "[parameters('SQLLOGSDriveCapacity')]",  
                            "lun": 1,
                            "createOption":"Empty",
                           "managedDisk" :{
                               "storageAccountType": "StandardSSD_LRS"
                            }
                       },
                       {
                       "name": "[concat(parameters('virtualMachineName'),'-tempdisk1')]",
                       "diskSizeGB": "[parameters('SQLTEMPDriveCapacity')]",  
                       "lun": 2,
                       "createOption":"Empty",
                      "managedDisk" :{
                          "storageAccountType": "StandardSSD_LRS"
                       }
                  }
                    ],

                    "imageReference": {
                      "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
                "licenseType": "Windows_Server"
            }
        },
        {
            "comments": "Join domain - JsonADDomainExtension",
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineName'),'/joindomain')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceid('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
              "publisher": "Microsoft.Compute",
              "type": "JsonADDomainExtension",
              "typeHandlerVersion": "1.3",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "Name": "[parameters('domainName')]",
                "User": "[concat(parameters('domainName'), variables('DomUserNameSlashes'))]",
                "Restart": "true",
                "Options": "3",
                "OUPath": "[parameters('OUPath')]"
              },
              "protectedSettings": {
                "Password": "[parameters('DomPassword')]"
              }
            }
          }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}
